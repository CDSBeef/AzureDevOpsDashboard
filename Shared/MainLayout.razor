@inherits LayoutComponentBase
@inject ITokenService TokenService
@inject TokenStateService TokenStateService
@inject NavigationManager NavigationManager

<PageTitle>Azure DevOps Dashboard</PageTitle>

<div class="page">
    <div class="top-bar">
        <div class="brand">
            <span class="oi oi-code" aria-hidden="true"></span>
            Azure DevOps
        </div>
        <NavMenu />
        <div class="top-actions">
            <div class="search">
                <input type="text" placeholder="Search..." />
            </div>
            <a href="https://dev.azure.com" target="_blank" class="portal-link">
                <span class="oi oi-external-link me-2"></span>
                Azure DevOps Portal
            </a>
            @if (_hasToken)
            {
                <a href="javascript:void(0)" class="portal-link" @onclick="HandleLogout">
                    <span class="oi oi-account-logout me-2"></span>
                    Logout
                </a>
            }
        </div>
    </div>

    <main>
        <article class="content">
            @Body
        </article>
    </main>
</div>

@code {
    private bool _hasToken;

    protected override async Task OnInitializedAsync()
    {
        _hasToken = !string.IsNullOrEmpty(await TokenService.GetTokenAsync());
        TokenStateService.OnTokenSet += async () => await InvokeAsync(() => 
        { 
            _hasToken = true; 
            StateHasChanged(); 
        });
        TokenStateService.OnTokenCleared += async () => await InvokeAsync(() => 
        { 
            _hasToken = false; 
            StateHasChanged(); 
        });
    }

    private async Task HandleLogout()
    {
        await TokenService.ClearTokenAsync();
        TokenStateService.NotifyTokenCleared();
        NavigationManager.NavigateTo("/", true);
    }
}